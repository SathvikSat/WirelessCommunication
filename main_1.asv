%% TRANSMITTER PART

%% random message bits generation
data_bits = round(rand(1,128));

%% scrambling the data

[data_scrambled, PN_] = data_scrambler_1(data_bits);

%% encoding the data using convolutional encoder
[data_encoded, trellis] = cc_encoder_1(data_scrambled);

%% modulating the signal using 16QAM 
data_mod = QAM_1(data_encoded);

%% OFDM and adding cyclic prefix
tx_cp = IFFT_1(data_mod);

%% effect of channel fading co-efficient and addition of Additive White Gaussian Noise(AWGN) 
channel_faded_data = channel_1(tx_cp);
noisy_data = add_noise_1(tx_cp);

%% RECEIVER PART
rx_with_qam = FFT_1(noisy_data);

rx_binary = deQAM_1(rx_with_qam);

rx_decoded = viterbi_decoder_1(rx_binary, trellis); 
descrambler = descramble_1(PN_, rx_decoded);

sum(bitxor(descrambler(:), data_bits(:)))



 
